@model ProyectoBasesDatos.Models.Tratamiento
@{
    ViewData["Title"] = "Editar Tratamiento";
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-md-10 col-lg-8">
            <div class="card shadow border-0 rounded-3">
                <div class="card-header bg-primary text-white py-3">
                    <div class="d-flex align-items-center">
                        <i class="fas fa-pills fs-4 me-3"></i>
                        <h2 class="card-title mb-0 fw-bold">Editar Tratamiento</h2>
                    </div>
                </div>
                <div class="card-body p-4">
                    <!-- Formulario de edición -->
                    <form asp-action="Edit" class="needs-validation" novalidate>
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger alert-dismissible fade show" role="alert">
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>

                        <input type="hidden" asp-for="Id" />

                        <div class="row">
                            <!-- Precio -->
                            <div class="col-md-6 mb-4">
                                <div class="form-floating">
                                    <input asp-for="Precio" class="form-control" id="floatingPrecio" placeholder="Precio" required />
                                    <label asp-for="Precio"><i class="fas fa-dollar-sign me-1"></i>Precio</label>
                                </div>
                                <span asp-validation-for="Precio" class="text-danger small"></span>
                            </div>

                            <!-- Cita -->
                            <div class="col-md-6 mb-4">
                                <div class="form-floating">
                                    <select asp-for="IdCita" class="form-select" id="floatingCita" asp-items="ViewBag.IdCita" required>
                                        <option value="">Seleccione una cita</option>
                                    </select>
                                    <label asp-for="IdCita"><i class="fas fa-calendar-check me-1"></i>Cita</label>
                                </div>
                                <span asp-validation-for="IdCita" class="text-danger small"></span>
                            </div>
                        </div>

                        <div class="d-flex justify-content-between mt-4">
                            <a asp-action="Index" class="btn btn-outline-secondary btn-lg">
                                <i class="fas fa-arrow-left me-2"></i>Volver
                            </a>
                            <button type="submit" class="btn btn-success btn-lg px-4">
                                <i class="fas fa-save me-2"></i>Guardar Cambios
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <div class="card mt-4 bg-light border-0 shadow-sm">
                <div class="card-body p-3">
                    <div class="d-flex">
                        <div class="me-3">
                            <i class="fas fa-info-circle text-primary fs-4"></i>
                        </div>
                        <div>
                            <h5 class="card-title">Información</h5>
                            <p class="card-text mb-0">Modifique los datos del tratamiento y haga clic en "Guardar Cambios" para actualizar la información.</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Agregar animación a los campos cuando obtienen foco
        document.querySelectorAll('.form-control, .form-select').forEach(input => {
            input.addEventListener('focus', function() {
                this.closest('.form-floating').classList.add('border-primary');
            });

            input.addEventListener('blur', function() {
                this.closest('.form-floating').classList.remove('border-primary');
            });
        });

        // Validar que el campo de precio solo acepte números y decimales
        document.getElementById('floatingPrecio').addEventListener('input', function (event) {
            // Permite solo números y un punto decimal
            this.value = this.value.replace(/[^0-9.]/g, '');

            // Asegura que solo haya un punto decimal
            const parts = this.value.split('.');
            if (parts.length > 2) {
                this.value = parts[0] + '.' + parts.slice(1).join('');
            }

            // Limita a dos decimales después del punto
            if (parts.length > 1 && parts[1].length > 2) {
                this.value = parts[0] + '.' + parts[1].substring(0, 2);
            }
        });
    </script>
}