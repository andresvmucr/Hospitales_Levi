@model ProyectoBasesDatos.Models.Tratamiento

@{
    ViewData["Title"] = "Atender Cita";
    var idCita = ViewBag.IdCita;
    var errorMessage = TempData["ErrorMessage"] as string; // Obtener el mensaje de error
}

<div class="container mt-5">
    <div class="card shadow-lg">
        <div class="card-header bg-gradient-primary text-black">
            <h1 class="h4 mb-0">Atender Cita</h1>
            <p class="mb-0">Complete los detalles del tratamiento para la cita.</p>
        </div>
        <div class="card-body">
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger">
                    @errorMessage
                </div>
            }
            <form asp-controller="Tratamientos" asp-action="Create" method="post" class="needs-validation" novalidate onsubmit="return validarFormulario()">
                <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                <input type="hidden" name="IdCita" value="@idCita" />

                <!-- Contenedor para los grupos de medicamentos -->
                <div id="medicamentosContainer">
                    <div class="form-group mb-4 medicamento-group">
                        <div class="input-group gap-4">
                            <div class="flex-grow-1">
                                <label class="form-label">Medicamento</label>
                                <select name="TratamientosMeds[0]" class="form-select" required>
                                    <option value="">-- Seleccione un medicamento --</option>
                                </select>
                            </div>

                            <div class="flex-grow-1">
                                <label class="form-label">Cantidad</label>
                                <input type="number" name="Cantidad[0]" class="form-control" min="1" required>
                            </div>

                            <div class="flex-grow-1">
                                <label class="form-label">Frecuencia</label>
                                <input type="text" name="Frecuencia[0]" class="form-control" required>
                            </div>

                            <div class="flex-grow-0 d-flex align-items-end">
                                <button type="button" class="btn btn-danger btn-eliminar">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <div id="mensajeSinTratamientos" class="alert alert-info" style="display: none;">
                    No se han incluido tratamientos.
                </div>

                <div class="form-group mb-4">
                    <button type="button" id="agregarMedicamento" class="btn btn-secondary">
                        <i class="fas fa-plus me-2"></i>Agregar Medicamento
                    </button>
                </div>

                <div class="form-group text-end">
                    <button type="submit" class="btn btn-primary btn-lg">
                        <i class="fas fa-check-circle me-2"></i>Atender
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        document.addEventListener("DOMContentLoaded", function() {
            let idCita = "@idCita";
            let medicamentosContainer = document.getElementById("medicamentosContainer");
            let mensajeSinTratamientos = document.getElementById("mensajeSinTratamientos");

            function cargarMedicamentos(select) {
                let url = `/Citas/Attend/${idCita}/GetMeds`;
                fetch(url)
                    .then(response => response.json())
                    .then(data => {
                        select.innerHTML = '<option value="">-- Seleccione un medicamento --</option>';
                        data.forEach(med => {
                            let option = document.createElement("option");
                            option.value = med.id;
                            option.textContent = med.nombre;
                            select.appendChild(option);
                        });
                    })
                    .catch(error => {
                        console.error("Error al cargar los medicamentos:", error);
                        select.innerHTML = '<option value="">Error al cargar medicamentos</option>';
                    });
            }

            let primerSelect = medicamentosContainer.querySelector("select");
            cargarMedicamentos(primerSelect);

            document.getElementById("agregarMedicamento").addEventListener("click", function() {
                let nuevoGrupo = medicamentosContainer.firstElementChild.cloneNode(true);
                let index = medicamentosContainer.querySelectorAll(".medicamento-group").length;

                nuevoGrupo.querySelector("select").name = `TratamientosMeds[${index}]`;
                nuevoGrupo.querySelector("input[type='number']").name = `Cantidad[${index}]`;
                nuevoGrupo.querySelector("input[type='text']").name = `Frecuencia[${index}]`;

                nuevoGrupo.querySelector("select").selectedIndex = 0;
                nuevoGrupo.querySelector("input[type='number']").value = "";
                nuevoGrupo.querySelector("input[type='text']").value = "";

                cargarMedicamentos(nuevoGrupo.querySelector("select"));
                medicamentosContainer.appendChild(nuevoGrupo);
                mensajeSinTratamientos.style.display = "none";
            });

            medicamentosContainer.addEventListener("click", function(e) {
                if (e.target.closest(".btn-eliminar")) {
                    e.target.closest(".medicamento-group").remove();
                    let grupos = medicamentosContainer.querySelectorAll(".medicamento-group");

                    grupos.forEach((grupo, index) => {
                        grupo.querySelector("select").name = `TratamientosMeds[${index}]`;
                        grupo.querySelector("input[type='number']").name = `Cantidad[${index}]`;
                        grupo.querySelector("input[type='text']").name = `Frecuencia[${index}]`;
                    });

                    if (grupos.length === 0) {
                        mensajeSinTratamientos.style.display = "block";
                    }
                }
            });
        });

        function validarFormulario() {
            let grupos = document.querySelectorAll(".medicamento-group");
            for (let grupo of grupos) {
                let select = grupo.querySelector("select");
                let cantidad = grupo.querySelector("input[type='number']");
                let frecuencia = grupo.querySelector("input[type='text']");

                if (!select.value) {
                    alert("Seleccione un medicamento.");
                    select.focus();
                    return false;
                }

                if (!cantidad.value) {
                    alert("Ingrese la cantidad.");
                    cantidad.focus();
                    return false;
                }

                if (!frecuencia.value) {
                    alert("Ingrese la frecuencia.");
                    frecuencia.focus();
                    return false;
                }
            }
            return true;
        }
    </script>
}